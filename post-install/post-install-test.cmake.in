
#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

message("POST INSTALL CHECK")
set (ENV{LPF_CC} "mcc")

if (DEFINED ENV{DESTDIR})

    message("NOTE: Post install check skipped because DESTDIR is set")

else()


### Testing "universal binaries"
if (UNIX AND NOT APPLE)
## Universal binaries are not supported on MacOS, because LD_PRELOAD will not work

message("Compiling an LPF program for any engine")
execute_process(
       COMMAND @bindir@/lpfcc -engine ibverbs --ompss-2 --Wn,-Ofast,-march=native,-ffast-math --Wl,-Ofast,-march=native,-ffast-math -std=gnu99 @srcdir@/test-lpf-nprocs.c -o test-lpf-nprocs -L/apps/PM/ovni/git/lib -I/apps/PM/ovni/git/include -lovni
       WORKING_DIRECTORY @builddir@
       RESULT_VARIABLE status
       )
if (NOT status EQUAL 0 )
      message(SEND_ERROR "lpfcc failed compiling a simple LPF program into a universal binary")
endif()

message("Running an LPF program on any of the engines: ibverbs")
foreach(engine ibverbs)
    foreach( nprocs 1 2 3 )
        execute_process(
               COMMAND @bindir@/lpfrun -engine ${engine} -np ${nprocs} ./test-lpf-nprocs ${nprocs}
               WORKING_DIRECTORY @builddir@
               OUTPUT_FILE @builddir@/test-lpf-nprocs-${engine}-${nprocs}.log
               RESULT_VARIABLE status
               )

        if (NOT status EQUAL 0 )
              message(SEND_ERROR "lpfrun failed running a simple universal program with ${engine} engine")
        endif()
    endforeach(nprocs)
endforeach(engine)

### Testing linking with debug library

message("Compiling an LPF program with debug library")
execute_process(
       COMMAND @bindir@/lpfcc -engine ibverbs --ompss-2 --Wn,-Ofast,-march=native,-ffast-math --Wl,-Ofast,-march=native,-ffast-math -std=gnu99 @srcdir@/test-lpf-debug.c -o test-lpf-debug # -llpf_debug
       WORKING_DIRECTORY @builddir@
       RESULT_VARIABLE status
       )
if (NOT status EQUAL 0 )
      message(SEND_ERROR "lpfcc failed compiling a simple LPF program with debug library")
endif()

message("Running an LPF program with debug library on any of the engines: ibverbs")
foreach(engine ibverbs)
    foreach( nprocs 2 3 )
        execute_process(
               COMMAND @bindir@/lpfrun -engine ${engine} -np ${nprocs} ./test-lpf-debug ${nprocs}
               WORKING_DIRECTORY @builddir@
               OUTPUT_FILE @builddir@/test-lpf-debug-${engine}-${nprocs}.log
               ERROR_FILE  @builddir@/test-lpf-debug-${engine}-${nprocs}.log
               RESULT_VARIABLE status
               )

        # error when no error has been detected
        if (status EQUAL 0)
              message(SEND_ERROR "Debug library failed to detect runtime error on engine ${engine} on P=${nprocs}")
        endif()
    endforeach(nprocs)
endforeach(engine)

endif(UNIX AND NOT APPLE)



endif (DEFINED ENV{DESTDIR})
